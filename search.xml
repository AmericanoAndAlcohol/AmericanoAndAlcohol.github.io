<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>R包安装报错 is not available</title>
    <url>/2023/04/18/R%E5%8C%85%E5%AE%89%E8%A3%85%E6%8A%A5%E9%94%99-is-not-available/</url>
    <content><![CDATA[<p>R包安装报错ERROR: dependency is not available</p>
<span id="more"></span>


<h1 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h1><ul>
<li>R版本：version 3.6.0</li>
</ul>
<h1 id="简要过程"><a href="#简要过程" class="headerlink" title="简要过程"></a>简要过程</h1><ul>
<li>安装R包：ComplexHeatmap  </li>
<li>安装命令：<code>BiocManager::install(&quot;ComplexHeatmap&quot;)</code>  </li>
<li>报错信息：ERROR: dependency ‘GetoptLong’ is not available for package ‘ComplexHeatmap’  </li>
<li>原因：ComplexHeatmap依赖的GetoptLong依赖的rjson，要求R版本高于当前版本  </li>
<li>解决：先安装旧版本的rjson，再安装ComplexHeatmap</li>
</ul>
<h1 id="具体过程"><a href="#具体过程" class="headerlink" title="具体过程"></a>具体过程</h1><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>在github有查到报错信息：  </p>
<ul>
<li><a href="https://github.com/jokergoo/ComplexHeatmap/issues/514">找到个相关Issue</a>  </li>
<li>按这个Issue说的，安装更旧版本的GetoptLong。<br><code>install.packages(&quot;https://cran.r-project.org/src/contrib/Archive/GetoptLong/GetoptLong_0.1.8.tar.gz&quot;, repo = NULL)</code></li>
</ul>
<h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>尝试安装更旧版本的GetoptLong时，会报另外一个包的错：  </p>
<ul>
<li>ERROR: dependency ‘rjson’ is not available for package ‘GetoptLong’  </li>
<li>在CRAN上查<a href="https://cran.r-project.org/web/packages/rjson/index.html">rjson</a>，当前这个包的版本是 0.2.21，Depends的R版本要≥ 4.0.0。  </li>
<li><strong>就是这个原因导致ComplexHeatmap安装不上，其实一开始GetoptLong的报错往上翻一点就会看见rjson的报错。</strong><br><img src="https://pic.imgdb.cn/item/643e8fe40d2dde5777cdc74f.jpg" alt="rjson_Depends"></li>
</ul>
<h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><ul>
<li>到Old sources找旧版本，从新往旧，一个个安装试试。0.2.20版本就装得上。<br><code>install.packages(&quot;https://cran.r-project.org/src/contrib/Archive/rjson/rjson_0.2.20.tar.gz&quot;, repo = NULL)</code><br><img src="https://pic.imgdb.cn/item/643e90040d2dde5777cdf9f2.jpg" alt="Old_sources"></li>
</ul>
<h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><ul>
<li>rjson安装成功后，重新安装ComplexHeatmap。  </li>
<li><code>BiocManager::install(&quot;ComplexHeatmap&quot;)</code>安装成功。</li>
</ul>
]]></content>
      <categories>
        <category>Bug</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>ComplexHeatmap</tag>
      </tags>
  </entry>
  <entry>
    <title>热图竖向列名</title>
    <url>/2023/04/17/%E7%83%AD%E5%9B%BE%E7%AB%96%E5%90%91%E5%88%97%E5%90%8D/</url>
    <content><![CDATA[<p>用ComplexHeatmap画热图，列名竖向排列</p>
<span id="more"></span>

<h1 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h1><ul>
<li>R版本：version 3.6.0  </li>
<li>R包版本：ComplexHeatmap 2.2.0</li>
</ul>
<h1 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h1><p>  列名放在热图上方，字体排列是竖向的。  </p>
<ul>
<li>列名放在热图上方很好解决，直接用Heatmap()的column_names_side &#x3D; “top”。  </li>
<li>问题是字体竖向排列。</li>
</ul>
<h1 id="失败方案"><a href="#失败方案" class="headerlink" title="失败方案"></a>失败方案</h1><h2 id="方案1"><a href="#方案1" class="headerlink" title="方案1"></a>方案1</h2><p>  Heatmap(column_names_rot &#x3D; 90)，不行。<br>  列名是整体旋转，做不到竖向阅读。<br>  <img src="https://pic.imgdb.cn/item/643cf6800d2dde577704aee0.jpg" alt="热图1column_names_rot=90">  </p>
<h2 id="方案2"><a href="#方案2" class="headerlink" title="方案2"></a>方案2</h2><p>  列名插入换行符，不行。<br>  可以竖向阅读，但是列名会和热图区域重叠。<br>  <img src="https://pic.imgdb.cn/item/643cf6ac0d2dde577704eb57.jpg" alt="热图2列名插入换行符">  </p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><ul>
<li><p>列名插入换行符，并用decorate_dimnames()重绘列名组件。  </p>
</li>
<li><p>热图示例<br><img src="https://pic.imgdb.cn/item/643cf6db0d2dde5777053a3a.jpg" alt="热图3完成">  </p>
</li>
<li><p>数据示例<br><img src="https://pic.imgdb.cn/item/643cf6f50d2dde5777055a3f.jpg" alt="数据示例">  </p>
</li>
<li><p>文本文件的中文编码转换示例<br><code>iconv -c -f GBK -t UTF-8 Input.GBK.tsv -o Output.utf8.tsv</code>  </p>
</li>
<li><p>代码  </p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ComplexHeatmap参考示例</span></span><br><span class="line"><span class="comment"># https://jokergoo.github.io/ComplexHeatmap-reference/book/</span></span><br><span class="line"></span><br><span class="line">library<span class="punctuation">(</span>ComplexHeatmap<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>circlize<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">args <span class="operator">&lt;-</span> commandArgs<span class="punctuation">(</span><span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line">Input_Table <span class="operator">=</span> args<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line">Output_Dir <span class="operator">=</span> args<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果输出目录不存在，创建它</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span> dir.exists<span class="punctuation">(</span>Output_Dir<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">&#123;</span></span><br><span class="line">        dir.create<span class="punctuation">(</span>Plot_Result_Dir<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出图片文件路径</span></span><br><span class="line">Output_Pic <span class="operator">=</span> paste<span class="punctuation">(</span>Output_Dir<span class="punctuation">,</span> <span class="string">&quot;/Heatmap.png&quot;</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> collapse <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########################## 数据处理 ##########################</span></span><br><span class="line"><span class="comment"># 读入数据</span></span><br><span class="line"><span class="comment"># stringsAsFactors=FALSE 不将字符型变量转为因子，否则对其做字符串操作会报错</span></span><br><span class="line"><span class="comment"># check.names=FALSE 不检查列名的命名有效性，否则列名会被修改：如数字开头会在最前面被加上X、空格被变为.、-被变为.等情况</span></span><br><span class="line"><span class="comment"># check.names=FALSE后，列名的空格会被保留，用列名获取数据时，需要用Data_Frame$`Name With Space`这种格式</span></span><br><span class="line">Data <span class="operator">=</span> read.table<span class="punctuation">(</span>Input_Table<span class="punctuation">,</span> head <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> comment.char <span class="operator">=</span> <span class="string">&quot;#&quot;</span><span class="punctuation">,</span> stringsAsFactors <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> check.names <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 函数：字符串的每个字符中间插入换行符</span></span><br><span class="line">wrap_letters <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">        sapply<span class="punctuation">(</span>strsplit<span class="punctuation">(</span>x<span class="punctuation">,</span> <span class="string">&#x27;&#x27;</span><span class="punctuation">)</span><span class="punctuation">,</span> paste0<span class="punctuation">,</span> collapse <span class="operator">=</span> <span class="string">&#x27;\n&#x27;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Data从第2列到最后1列作为画图数据Data_Draw</span></span><br><span class="line">Data_Draw <span class="operator">=</span> Data<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="operator">:</span>ncol<span class="punctuation">(</span>Data<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="comment"># Data的第1列作为画图数据Data_Draw的行名</span></span><br><span class="line">row.names<span class="punctuation">(</span>Data_Draw<span class="punctuation">)</span> <span class="operator">=</span> Data<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line"><span class="comment"># 另存画图数据Data_Draw的列名，并在列名的每个字符中间插入换行符</span></span><br><span class="line">Col_Names <span class="operator">=</span> wrap_letters<span class="punctuation">(</span>colnames<span class="punctuation">(</span>Data_Draw<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 将Data_Draw的列名替换为空</span></span><br><span class="line"><span class="built_in">names</span><span class="punctuation">(</span>Data_Draw<span class="punctuation">)</span> <span class="operator">=</span> <span class="built_in">rep</span><span class="punctuation">(</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span> ncol<span class="punctuation">(</span>Data_Draw<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于cell显示数值。read.table(colClasses = &quot;character&quot;)数值全部作为字符串读入，避免format()转换的科学计数法。NA转为空字符串。</span></span><br><span class="line">Cell_Number <span class="operator">=</span> read.table<span class="punctuation">(</span>Input_Table<span class="punctuation">,</span> head <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> comment.char <span class="operator">=</span> <span class="string">&quot;#&quot;</span><span class="punctuation">,</span> stringsAsFactors <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> check.names <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> colClasses <span class="operator">=</span> <span class="string">&quot;character&quot;</span><span class="punctuation">,</span> na.strings <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line">Cell_Number <span class="operator">=</span> Cell_Number<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="operator">:</span>ncol<span class="punctuation">(</span>Cell_Number<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">Cell_Number<span class="punctuation">[</span><span class="built_in">is.na</span><span class="punctuation">(</span>Cell_Number<span class="punctuation">)</span><span class="punctuation">]</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########################## 画图 ############################</span></span><br><span class="line"><span class="comment"># 根据画图数据的行数、列数设置图的尺寸</span></span><br><span class="line">base_size <span class="operator">=</span> <span class="number">3</span></span><br><span class="line">hight_factor <span class="operator">=</span> <span class="built_in">ceiling</span><span class="punctuation">(</span>nrow<span class="punctuation">(</span>Data_Draw<span class="punctuation">)</span> <span class="operator">/</span> <span class="number">8</span><span class="punctuation">)</span></span><br><span class="line">width_factor <span class="operator">=</span> <span class="built_in">ceiling</span><span class="punctuation">(</span>ncol<span class="punctuation">(</span>Data_Draw<span class="punctuation">)</span> <span class="operator">/</span> <span class="number">4</span><span class="punctuation">)</span></span><br><span class="line">width_value <span class="operator">=</span> base_size <span class="operator">*</span> width_factor <span class="operator">*</span> <span class="number">0.6</span></span><br><span class="line"><span class="keyword">if</span><span class="punctuation">(</span>width_value <span class="operator">&gt;</span> <span class="number">200</span><span class="punctuation">)</span><span class="punctuation">&#123;</span>width_value <span class="operator">=</span> <span class="number">200</span><span class="punctuation">&#125;</span></span><br><span class="line">height_value<span class="operator">=</span><span class="punctuation">(</span>base_size <span class="operator">+</span> <span class="number">2</span><span class="punctuation">)</span> <span class="operator">*</span> hight_factor <span class="operator">*</span> <span class="number">0.65</span></span><br><span class="line"><span class="keyword">if</span><span class="punctuation">(</span>height_value <span class="operator">&gt;</span> <span class="number">300</span><span class="punctuation">)</span><span class="punctuation">&#123;</span>height_value <span class="operator">=</span> <span class="number">300</span><span class="punctuation">&#125;</span></span><br><span class="line">png<span class="punctuation">(</span>Output_Pic<span class="punctuation">,</span> width <span class="operator">=</span> width_value<span class="punctuation">,</span> height <span class="operator">=</span> height_value<span class="punctuation">,</span> units <span class="operator">=</span> <span class="string">&quot;in&quot;</span><span class="punctuation">,</span> res<span class="operator">=</span><span class="number">300</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 热图大小占图的80%</span></span><br><span class="line">Heatmap_Width <span class="operator">=</span> width_value <span class="operator">*</span> <span class="number">0.8</span></span><br><span class="line">Heatmap_Height <span class="operator">=</span> height_value <span class="operator">*</span> <span class="number">0.8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义热图颜色</span></span><br><span class="line">Color_Palette <span class="operator">&lt;-</span> colorRamp2<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span> <span class="number">25</span><span class="punctuation">,</span> <span class="number">50</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;white&quot;</span><span class="punctuation">,</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span> <span class="string">&quot;yellow&quot;</span><span class="punctuation">,</span> <span class="string">&quot;red&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 热图</span></span><br><span class="line">Darw_Heatmap <span class="operator">=</span> Heatmap<span class="punctuation">(</span></span><br><span class="line">  Data_Draw<span class="punctuation">,</span></span><br><span class="line">  name <span class="operator">=</span> <span class="string">&quot;Darw_Heatmap&quot;</span><span class="punctuation">,</span></span><br><span class="line">  width <span class="operator">=</span> unit<span class="punctuation">(</span>Heatmap_Width<span class="punctuation">,</span> <span class="string">&quot;in&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  height <span class="operator">=</span> unit<span class="punctuation">(</span>Heatmap_Height<span class="punctuation">,</span> <span class="string">&quot;in&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  col<span class="operator">=</span>Color_Palette<span class="punctuation">,</span></span><br><span class="line">  <span class="comment"># 行、列聚类</span></span><br><span class="line">  cluster_rows <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">  cluster_columns <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment"># 行名相关参数</span></span><br><span class="line">  show_row_names <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  row_names_side <span class="operator">=</span> <span class="string">&quot;right&quot;</span><span class="punctuation">,</span></span><br><span class="line">  row_names_gp <span class="operator">=</span> gpar<span class="punctuation">(</span>fontsize <span class="operator">=</span> <span class="number">12</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  row_names_max_width <span class="operator">=</span> max_text_width<span class="punctuation">(</span>row.names<span class="punctuation">(</span>Data_Draw<span class="punctuation">)</span><span class="punctuation">,</span> gp <span class="operator">=</span> gpar<span class="punctuation">(</span>fontsize <span class="operator">=</span> <span class="number">12</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  row_names_rot <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment"># 列名相关参数</span></span><br><span class="line">  show_column_names <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  column_names_side <span class="operator">=</span> <span class="string">&quot;top&quot;</span><span class="punctuation">,</span></span><br><span class="line">  column_names_gp <span class="operator">=</span> gpar<span class="punctuation">(</span>fontsize <span class="operator">=</span> <span class="number">12</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  column_names_max_height <span class="operator">=</span> max_text_width<span class="punctuation">(</span><span class="built_in">names</span><span class="punctuation">(</span>Data_Draw<span class="punctuation">)</span><span class="punctuation">,</span> gp <span class="operator">=</span> gpar<span class="punctuation">(</span>fontsize <span class="operator">=</span> <span class="number">12</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  column_names_rot <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment"># 相当于pheatmap的border_color和border线宽度</span></span><br><span class="line">  rect_gp <span class="operator">=</span> gpar<span class="punctuation">(</span>col <span class="operator">=</span> <span class="string">&quot;grey&quot;</span><span class="punctuation">,</span> lwd <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment"># 每个cell显示对应数值，相当于pheatmap的display_numbers</span></span><br><span class="line">  cell_fun <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span>j<span class="punctuation">,</span> i<span class="punctuation">,</span> x<span class="punctuation">,</span> y<span class="punctuation">,</span> width<span class="punctuation">,</span> height<span class="punctuation">,</span> fill<span class="punctuation">)</span> <span class="punctuation">&#123;</span>grid.text<span class="punctuation">(</span>Cell_Number<span class="punctuation">[</span>i<span class="punctuation">,</span>j<span class="punctuation">]</span><span class="punctuation">,</span> x<span class="punctuation">,</span> y<span class="punctuation">,</span> gp <span class="operator">=</span> gpar<span class="punctuation">(</span>fontsize <span class="operator">=</span> <span class="number">9</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment"># 空值的cell的颜色</span></span><br><span class="line">  na_col <span class="operator">=</span> <span class="string">&quot;white&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment"># 图例相关参数</span></span><br><span class="line">  show_heatmap_legend <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">  heatmap_legend_param <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span>title <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> color_bar <span class="operator">=</span> <span class="string">&quot;continuous&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 图例</span></span><br><span class="line">Draw_Legend <span class="operator">=</span> Legend<span class="punctuation">(</span>col <span class="operator">=</span> Color_Palette<span class="punctuation">,</span> title <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> grid_height <span class="operator">=</span> unit<span class="punctuation">(</span><span class="number">6</span><span class="punctuation">,</span> <span class="string">&quot;mm&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> grid_width <span class="operator">=</span> unit<span class="punctuation">(</span><span class="number">6</span><span class="punctuation">,</span> <span class="string">&quot;mm&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置热图四周的距离，因为有的列名很长，热图上方需要空出更多空间</span></span><br><span class="line">Heatmap_Left_Padding <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">Heatmap_Bottom_Padding <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">Heatmap_Top_Padding <span class="operator">=</span> <span class="number">94</span></span><br><span class="line">Heatmap_Right_Padding <span class="operator">=</span> <span class="number">2</span></span><br><span class="line"><span class="comment"># 绘制热图和图例</span></span><br><span class="line"><span class="comment"># 热图需要padding，图例要移动位置，所以必须用draw()</span></span><br><span class="line">draw<span class="punctuation">(</span>Darw_Heatmap<span class="punctuation">,</span> padding <span class="operator">=</span> unit<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span>Heatmap_Bottom_Padding<span class="punctuation">,</span> Heatmap_Left_Padding<span class="punctuation">,</span> Heatmap_Top_Padding<span class="punctuation">,</span> Heatmap_Right_Padding<span class="punctuation">)</span><span class="punctuation">,</span> <span class="string">&quot;mm&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">draw<span class="punctuation">(</span>Draw_Legend<span class="punctuation">,</span> x <span class="operator">=</span> unit<span class="punctuation">(</span><span class="number">0.98</span><span class="punctuation">,</span> <span class="string">&quot;npc&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> y <span class="operator">=</span> unit<span class="punctuation">(</span><span class="number">0.85</span><span class="punctuation">,</span> <span class="string">&quot;npc&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> just <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;right&quot;</span><span class="punctuation">,</span> <span class="string">&quot;top&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据热图padding设置第一个列名的位置</span></span><br><span class="line">X_Pos <span class="operator">=</span> unit<span class="punctuation">(</span>Heatmap_Left_Padding<span class="operator">+</span><span class="number">1</span><span class="punctuation">,</span> <span class="string">&quot;mm&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 每个列名输出后需要移动一定位置，以对齐每个cell。根据热图大小和列数量，计算每个cell的宽度</span></span><br><span class="line">X_Step <span class="operator">=</span> unit<span class="punctuation">(</span>Heatmap_Width<span class="operator">/</span>ncol<span class="punctuation">(</span>Data_Draw<span class="punctuation">)</span><span class="punctuation">,</span> <span class="string">&quot;in&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># decorate_*()系列函数用于绘制热图后，对热图组件做修改 https://jokergoo.github.io/ComplexHeatmap-reference/book/heatmap-decoration.html</span></span><br><span class="line"><span class="comment"># decorate_dimnames(which = &quot;column&quot;)用于修改列名组件</span></span><br><span class="line"><span class="comment"># 注1：decorate_*()必须在热图绘制后才能用。如果Darw_Heatmap = Heatmap(...)后，必须先draw(Darw_Heatmap)；或者不把Heatmap(...)赋给变量和draw()。同理，如果要修改某个组件，该组件必须先被绘制出来；我要修改列名，那必须Heatmap(show_column_names = TRUE)，所以前面要将Data_Draw的列名设为空值，否则Heatmap()和decorate_dimnames()会导致两次的列名重叠。</span></span><br><span class="line"><span class="comment"># 注2：decorate_*()的[heatmap]参数，是name of the heatmap，所以要用Heatmap(name = &quot;xxx&quot;)填的热图名称，而不是Heatmap(...)赋给的变量名</span></span><br><span class="line"><span class="comment"># 注3：这里Col_Names是直接取Data_Draw的列名。如果热图有做列聚类，列名顺序可能改变了，注意修改。</span></span><br><span class="line">decorate_dimnames<span class="punctuation">(</span><span class="string">&quot;Darw_Heatmap&quot;</span><span class="punctuation">,</span> which <span class="operator">=</span> <span class="string">&quot;column&quot;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="keyword">for</span> <span class="punctuation">(</span>Name <span class="keyword">in</span> Col_Names<span class="punctuation">)</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment"># 向下对齐，设置横坐标</span></span><br><span class="line">    grid.text<span class="punctuation">(</span>Name<span class="punctuation">,</span> just <span class="operator">=</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span> x <span class="operator">=</span> X_Pos<span class="punctuation">)</span></span><br><span class="line">    <span class="comment"># 列名输出后移动位置</span></span><br><span class="line">    X_Pos <span class="operator">=</span> X_Pos <span class="operator">+</span> X_Step</span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Log</category>
      </categories>
      <tags>
        <tag>R</tag>
        <tag>ComplexHeatmap</tag>
        <tag>画图</tag>
      </tags>
  </entry>
  <entry>
    <title>BLAST及NT库本地化</title>
    <url>/2023/04/16/BLAST%E5%8F%8ANT%E5%BA%93%E6%9C%AC%E5%9C%B0%E5%8C%96/</url>
    <content><![CDATA[<p>下载NCBI的NT数据库到服务器本地<br>Blast比对结果中输出物种信息<br>用TaxonKit、blastdbcmd、makeblastdb建立子库  </p>
<span id="more"></span>  

<h1 id="NT库本地化"><a href="#NT库本地化" class="headerlink" title="NT库本地化"></a>NT库本地化</h1><h2 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h2><ol>
<li><p>可选文件格式</p>
<ol>
<li>blast index文件<br> <code>https://ftp.ncbi.nlm.nih.gov/blast/db</code>中的nt.*.tar.gz 。<br> 下载完成后，MD5验证，解压文件，就可以直接用于blast。index中已经包含物种Taxonomy信息。但是压缩包中没有Fasta文件，需要的话可以用blastdbcmd提取。</li>
<li>Fasta文件<br><code>https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA</code>中的nt.gz 。<br>下载完成并解压后，需要自建blast index；如果结果中还需要物种Taxonomy信息，建index前还需要准备好TaxIDMapFile文件。</li>
</ol>
</li>
<li><p>下载blast index文件<br> wget下载有点问题，不知道是服务器还是网络问题，wget下载的文件总是MD5校验失败；有时候重新下又能校验成功。<br> aspera下载不行，链接NCBI失败，可能是必须开放某个指定端口。<br> 最后是用的rsync下载。  </p>
<ol>
<li>文件列表下载   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rsync --no-motd --files-from=&lt;文件列表&gt; &lt;文件源&gt; &lt;下载存放路径&gt;</span><br><span class="line"># 示例</span><br><span class="line">rsync --no-motd --files-from=***/File.list rsync://ftp.ncbi.nlm.nih.gov/blast/db/ ***/NT_Database</span><br></pre></td></tr></table></figure>
 File.list（每个文件1列）<br> <img src="https://pic.imgdb.cn/item/643c01890d2dde57770d7686.jpg" alt="File.list"></li>
</ol>
<ul>
<li>实际下载文件路径是&lt;文件源&gt;加上File.list中的内容，完整路径如：rsync:&#x2F;&#x2F;ftp.ncbi.nlm.nih.gov&#x2F;blast&#x2F;db&#x2F;nt.22.tar.gz。</li>
<li>当File.list中的内容包含子目录，&lt;下载存放路径&gt;中会自动生成对应层级目录，例如File.list中的内容是“blast&#x2F;db&#x2F;nt.22.tar.gz”，则下载的nt.22.tar.gz会保存在<code>&lt;下载存放路径&gt;/blast/db</code>中。</li>
</ul>
<ol start="2">
<li>并行下载<br> 推荐这种方式，文件列表逐个下载太慢，这个每行加“&amp;”后台并行下载文件比较快。   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rsync --no-motd &lt;文件源&gt; &lt;下载存放路径&gt;</span><br><span class="line"># 示例</span><br><span class="line">rsync --no-motd rsync://ftp.ncbi.nlm.nih.gov/blast/db/nt.22.tar.gz ***/NT_Database &amp;</span><br><span class="line">rsync --no-motd rsync://ftp.ncbi.nlm.nih.gov/blast/db/nt.23.tar.gz ***/NT_Database &amp;</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
</ol>
<h2 id="MD5验证"><a href="#MD5验证" class="headerlink" title="MD5验证"></a>MD5验证</h2><p><code>https://ftp.ncbi.nlm.nih.gov/blast/db</code>中还有nt.*.tar.gz.md5文件，用于MD5验证。<br>全部nt.<em>.tar.gz和nt.</em>.tar.gz.md5文件都下载完后，md5文件合并一起验证。<br>nt.all.md5.check中，文件名后是OK即文件完整；如果是Fail，则不完整，需要重新下载该文件。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 合并所有md5文件</span><br><span class="line">cat nt.*.tar.gz.md5 &gt; nt.all.md5</span><br><span class="line"># md5验证</span><br><span class="line">md5sum -c nt.all.md5 &gt; nt.all.md5.check</span><br></pre></td></tr></table></figure>

<h2 id="解压文件"><a href="#解压文件" class="headerlink" title="解压文件"></a>解压文件</h2><p><code>tar -zxvf nt.*.tar.gz</code><br>解压后，nt.*.tar.gz文件删除或者备份都可以。<br>一般是删除？除了需要迁移到别的服务器，好像也没有能再用到的地方了。  </p>
<h2 id="Blast比对"><a href="#Blast比对" class="headerlink" title="Blast比对"></a>Blast比对</h2><p>blast结果中Subject Seq-id（NT库的序列ID）格式为“gi|384474605|emb|HE793683.1|”，含有<a href="https://www.ncbi.nlm.nih.gov/genbank/sequenceids/">GI numbers</a>和<a href="https://support.nlm.nih.gov/knowledgebase/article/KA-03436/en-us">GenBank accession numbers</a>；不包含Taxid信息。<br>如果blast index中有Taxonomy信息，可以在输出格式增加staxids sscinames，使结果额外输出物种的Taxid和物种名称。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Shell</span><br><span class="line"></span><br><span class="line">sample=&quot;Input&quot;</span><br><span class="line">query_fa=&quot;Input.fa&quot;</span><br><span class="line"></span><br><span class="line">database=&quot;&lt;NT库目录&gt;/nt&quot;</span><br><span class="line">identity=&quot;98&quot;</span><br><span class="line">cov_hsp=&quot;90&quot;</span><br><span class="line">evalue=&quot;1e-5&quot;</span><br><span class="line"></span><br><span class="line">threads=&quot;8&quot;</span><br><span class="line"></span><br><span class="line"># 如果不export BLASTDB的话，要在bashrc声明BLASTDB，否则报错</span><br><span class="line"># 在-outfmt添加staxids sscinames，使结果额外输出物种Taxid、物种名称</span><br><span class="line">export BLASTDB=&lt;NT库目录&gt; &amp;&amp; blastn -query $&#123;query_fa&#125; -db $&#123;database&#125; -out $&#123;sample&#125;.noheader -outfmt &quot;6  qaccver saccver pident length mismatch gapopen qstart qend sstart send evalue bitscore staxids sscinames stitle&quot; -num_threads $&#123;threads&#125; -evalue $&#123;evalue&#125; -perc_identity $&#123;identity&#125; -qcov_hsp_perc $&#123;cov_hsp&#125;</span><br><span class="line"></span><br><span class="line"># 表头</span><br><span class="line">echo -e &quot;Query Seq-id\tSubject Seq-id\tIdentity\tAlignment length\tMismatch\tGap Open\tQuery Start\tQuery End\tSubject Start\tSubject End\tEvalue\tBitscore\tTaxonomy ID\tScientific Name\tSeq Title&quot; &gt; $&#123;sample&#125;.tsv</span><br><span class="line"></span><br><span class="line"># 合并blast结果和表头</span><br><span class="line">cat $&#123;sample&#125;.noheader &gt;&gt; $&#123;sample&#125;.tsv</span><br><span class="line"></span><br><span class="line"># 删除没有表头的blast结果</span><br><span class="line">rm -f $&#123;sample&#125;.noheader</span><br></pre></td></tr></table></figure>

<h1 id="构建子库"><a href="#构建子库" class="headerlink" title="构建子库"></a>构建子库</h1><ul>
<li>用blastdbcmd可以根据Taxid从NT库抽取相关序列，从而构建子库。  </li>
<li>用<a href="https://bioinf.shenwei.me/taxonkit/">TaxonKit</a>可以获取某个Taxid节点以下所有Taxid，也就是说不止可以抽取单个物种的序列，还可以提供Taxid列表来抽取整个目、科、属…的序列。  </li>
<li>TaxonKit需要<a href="https://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz">taxdump.tar.gz</a>。NT库和taxdump.tar.gz最好日期一致，因为Taxonomy会更新，可能导致NT库的Taxid和TaxonKit提取的有区别。具体见TaxonKit的<a href="https://bioinf.shenwei.me/taxonkit/chinese/#taxid-changelog-taxid">TaxID changelog</a>。  </li>
<li>如果要用Taxid统计blast结果中的物种信息，需要注意有些亚种&#x2F;株的Taxid与物种（Species）等级Taxid不一样。如Streptococcus parasanguinis ATCC 903（Taxid 888048）的Rank是strain；它是属于Streptococcus parasanguinis（Taxid 1318）这个物种的。用taxonkit lineage可以获取某个Taxid在物种等级的名称和Taxid。如<code>echo 888048 | taxonkit lineage | taxonkit reformat -t -f \&quot;&#123;s&#125;\&quot; | cut -f 3,4</code>。  </li>
<li>用子库作为参考序列blast时，将-db参数换成{Index_Dir}&#x2F;${Name}.fa即可。</li>
</ul>
<p>以链球菌属举例，在NCBI的<a href="https://www.ncbi.nlm.nih.gov/taxonomy">Taxonomy数据库</a>可以找到Streptococcus的Taxid是1301。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Shell</span><br><span class="line"></span><br><span class="line">Name=&quot;Streptococcus&quot;</span><br><span class="line">Taxid=&quot;1301&quot;</span><br><span class="line">Index_Dir=&quot;Streptococcus_Index&quot;</span><br><span class="line"></span><br><span class="line"># 获取该Taxid节点以下所有子节点的Taxid</span><br><span class="line">taxonkit list -I &quot;&quot; --ids $Taxid &gt; $&#123;Index_Dir&#125;/$&#123;Name&#125;.taxid</span><br><span class="line"></span><br><span class="line"># 提取相关序列</span><br><span class="line">blastdbcmd -db &lt;NT库目录&gt;/nt -taxidlist $&#123;Index_Dir&#125;/$&#123;Name&#125;.taxid &gt; $&#123;Index_Dir&#125;/$&#123;Name&#125;.fa</span><br><span class="line"></span><br><span class="line"># 提取GenBank accession numbers（GI号也可以）和Taxid的对应关系文件</span><br><span class="line">blastdbcmd -db &lt;NT库目录&gt;/nt -taxidlist $&#123;Index_Dir&#125;/$&#123;Name&#125;.taxid -outfmt &quot;%a %T&quot; &gt; $&#123;Index_Dir&#125;/taxid_map.txt</span><br><span class="line"></span><br><span class="line"># 建blast index，通过-parse_seqids -taxid_map在index中附加物种Taxonomy信息</span><br><span class="line">makeblastdb -dbtype nucl -in $&#123;Index_Dir&#125;/$&#123;Name&#125;.fa -out $&#123;Index_Dir&#125;/$&#123;Name&#125;.fa -parse_seqids -taxid_map $&#123;Index_Dir&#125;/taxid_map.txt</span><br><span class="line"></span><br><span class="line"># 提取序列的GenBank accession numbers、Taxid、物种名称（比对用不上，就是看看参考里有什么）</span><br><span class="line">blastdbcmd -db &lt;NT库目录&gt;/nt -taxidlist $&#123;Index_Dir&#125;/$&#123;Name&#125;.taxid -outfmt &quot;%a  %T  %S&quot; &gt; $&#123;Index_Dir&#125;/$&#123;Name&#125;.Name.tsv</span><br></pre></td></tr></table></figure>
<p>taxid_map.txt（第1列GenBank accession numbers，第2列Taxid）<br><img src="https://pic.imgdb.cn/item/643c01cc0d2dde57770dcff5.jpg" alt="taxid_map.txt"><br>Name.tsv（第1列GenBank accession numbers，第2列Taxid，第3列物种名称）<br><img src="https://pic.imgdb.cn/item/643c01b20d2dde57770dad98.jpg" alt="Name.tsv">  </p>
<h1 id="假如用nt-gz建库"><a href="#假如用nt-gz建库" class="headerlink" title="假如用nt.gz建库"></a>假如用nt.gz建库</h1><ul>
<li>nt.gz解压后是NT库的fasta文件。如果不需要物种信息的话，直接makeblastdb建库就行。如果balst结果要有物种信息，则需要提供GenBank accession numbers和Taxid对应关系，类似上面的子库构建的-parse_seqids -taxid_map方式。  </li>
<li>GenBank accession numbers和Taxid对应关系文件可以用<a href="https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/nucl_gb.accession2taxid.gz">nucl_gb.accession2taxid.gz</a>。和taxdump.tar.gz一样原因，accession2taxid最好与NT库日期一致。  </li>
<li>nucl_gb.accession2taxid.gz格式是tsv，第一列Accession，第二列Accession.version，第三列TaxId，第四列GI；整理成taxid_map格式后，用makeblastdb加-parse_seqids -taxid_map建库就行。</li>
</ul>
<h1 id="一些blastn参数"><a href="#一些blastn参数" class="headerlink" title="一些blastn参数"></a>一些blastn参数</h1><p>-task：默认是megablast，可选blastn、blastn-short、dc-megablast、megablast、rmblastn<br>-query：需要比对的fasta序列<br>-db：数据库路径，写到fasta前缀为止，如***&#x2F;NT_Database&#x2F;nt<br>-out：输出文件<br>-outfmt：输出格式，6是tab分割且无表头的格式，其他格式见blastn帮助文档<br>-num_threads：线程数，默认1；与-mt_mode相关，具体见<a href="https://www.ncbi.nlm.nih.gov/books/NBK571452/">这里</a><br>-evalue：e值过滤阈值，默认10<br>-perc_identity：identity百分比过滤阈值，取值0 ~ 100<br>-qcov_hsp_perc：hsp覆盖度百分比过滤阈值，取值0 ~ 100<br>-max_target_seqs：输出结果保留多少比对上的subject序列，默认500，建议大于等于5<br>-max_hsps：每个query序列比对上的每个subject序列保留多少个HSP，需要填写大于等于1，无默认值  </p>
]]></content>
      <categories>
        <category>Log</category>
      </categories>
      <tags>
        <tag>NT</tag>
        <tag>BLAST</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
</search>
